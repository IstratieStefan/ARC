---
export let host;
export let username;
export let password;
---

<div>
    <h1 class="text-3xl font-bold mb-8">SSH Terminal</h1>

    <div class="max-w-4xl">
        <div class="bg-arc-card rounded-2xl shadow-sm border border-gray-100 p-6">
            <div id="terminal-container" class="w-full h-[500px] rounded-lg bg-gray-900 overflow-hidden"></div>
        </div>
    </div>
</div>

<script>
    import { Terminal } from 'xterm';
    import { FitAddon } from 'xterm-addon-fit';
    import { WebLinksAddon } from 'xterm-addon-web-links';
    import 'xterm/css/xterm.css';

    let term: Terminal;
    let ws: WebSocket;

    // Initialize terminal
    function initTerminal() {
        const terminalContainer = document.getElementById('terminal-container');
        if (!terminalContainer) return;

        term = new Terminal({
            cursorBlink: true,
            fontSize: 14,
            fontFamily: 'Menlo, Monaco, "Courier New", monospace',
            theme: {
                background: '#1a1b26',
                foreground: '#a9b1d6',
                cursor: '#c0caf5'
            }
        });

        const fitAddon = new FitAddon();
        const webLinksAddon = new WebLinksAddon();

        term.loadAddon(fitAddon);
        term.loadAddon(webLinksAddon);

        term.open(terminalContainer);
        fitAddon.fit();

        // Handle window resize
        window.addEventListener('resize', () => {
            fitAddon.fit();
        });

        // Handle terminal input
        term.onData(data => {
            if (ws && ws.readyState === WebSocket.OPEN) {
                ws.send(JSON.stringify({ type: 'input', data }));
            }
        });
    }

    // Connect to SSH server
    function connect() {
        if (!host || !username || !password) {
            term.write('\r\nMissing connection details...\r\n');
            return;
        }

        // Initialize WebSocket connection to SSH proxy server
        ws = new WebSocket(`ws://${host}:22/ssh`);

        ws.onopen = () => {
            // Send authentication data
            ws.send(JSON.stringify({
                type: 'auth',
                username,
                password
            }));

            term.write('\r\nConnected to SSH server...\r\n');
        };

        ws.onmessage = (event) => {
            const data = JSON.parse(event.data);
            if (data.type === 'output') {
                term.write(data.data);
            }
        };

        ws.onclose = () => {
            term.write('\r\nConnection closed\r\n');
        };

        ws.onerror = () => {
            term.write('\r\nConnection error\r\n');
        };
    }

    // Initialize terminal when page loads
    document.addEventListener('DOMContentLoaded', () => {
        initTerminal();
        connect();
    });
</script>