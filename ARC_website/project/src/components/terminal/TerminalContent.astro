---
---

<div>
    <h1 class="text-3xl font-bold mb-8">SSH Terminal</h1>

    <div class="max-w-4xl">
        <div class="bg-arc-card rounded-2xl shadow-sm border border-gray-100 p-6">
            <div class="mb-6 grid grid-cols-2 gap-4">
                <div>
                    <label for="host" class="block text-sm font-medium text-arc-text-light mb-1">Host</label>
                    <input
                            type="text"
                            id="host"
                            class="w-full rounded-lg border-gray-300 bg-gray-50 px-4 py-2 focus:border-arc-accent focus:ring-1 focus:ring-arc-accent"
                            placeholder="192.168.1.100"
                    />
                </div>

                <div>
                    <label for="port" class="block text-sm font-medium text-arc-text-light mb-1">Port</label>
                    <input
                            type="number"
                            id="port"
                            class="w-full rounded-lg border-gray-300 bg-gray-50 px-4 py-2 focus:border-arc-accent focus:ring-1 focus:ring-arc-accent"
                            value="22"
                    />
                </div>

                <div>
                    <label for="username" class="block text-sm font-medium text-arc-text-light mb-1">Username</label>
                    <input
                            type="text"
                            id="username"
                            class="w-full rounded-lg border-gray-300 bg-gray-50 px-4 py-2 focus:border-arc-accent focus:ring-1 focus:ring-arc-accent"
                            placeholder="pi"
                    />
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium text-arc-text-light mb-1">Password</label>
                    <input
                            type="password"
                            id="password"
                            class="w-full rounded-lg border-gray-300 bg-gray-50 px-4 py-2 focus:border-arc-accent focus:ring-1 focus:ring-arc-accent"
                    />
                </div>
            </div>

            <div class="flex justify-end mb-6">
                <button
                        id="connect-button"
                        class="px-6 py-2 bg-arc-accent text-white rounded-lg hover:bg-arc-accent/90 transition-colors"
                >
                    Connect
                </button>
            </div>

            <div id="terminal-container" class="w-full h-[500px] rounded-lg bg-gray-900 overflow-hidden"></div>
        </div>
    </div>
</div>

<script>
    import { Terminal } from 'xterm';
    import { FitAddon } from 'xterm-addon-fit';
    import { WebLinksAddon } from 'xterm-addon-web-links';
    import 'xterm/css/xterm.css';

    let term: Terminal;
    let ws: WebSocket;

    // Initialize terminal
    function initTerminal() {
        const terminalContainer = document.getElementById('terminal-container');
        if (!terminalContainer) return;

        term = new Terminal({
            cursorBlink: true,
            fontSize: 14,
            fontFamily: 'Menlo, Monaco, "Courier New", monospace',
            theme: {
                background: '#1a1b26',
                foreground: '#a9b1d6',
                cursor: '#c0caf5'
            }
        });

        const fitAddon = new FitAddon();
        const webLinksAddon = new WebLinksAddon();

        term.loadAddon(fitAddon);
        term.loadAddon(webLinksAddon);

        term.open(terminalContainer);
        fitAddon.fit();

        // Handle window resize
        window.addEventListener('resize', () => {
            fitAddon.fit();
        });

        // Handle terminal input
        term.onData(data => {
            if (ws && ws.readyState === WebSocket.OPEN) {
                ws.send(JSON.stringify({ type: 'input', data }));
            }
        });
    }

    // Connect to SSH server
    function connect() {
        const host = (document.getElementById('host') as HTMLInputElement).value;
        const port = (document.getElementById('port') as HTMLInputElement).value;
        const username = (document.getElementById('username') as HTMLInputElement).value;
        const password = (document.getElementById('password') as HTMLInputElement).value;

        if (!host || !port || !username || !password) {
            alert('Please fill in all fields');
            return;
        }

        // Initialize WebSocket connection to SSH proxy server
        ws = new WebSocket(`ws://${host}:${port}/ssh`);

        ws.onopen = () => {
            // Send authentication data
            ws.send(JSON.stringify({
                type: 'auth',
                username,
                password
            }));

            term.write('\r\nConnected to SSH server...\r\n');
        };

        ws.onmessage = (event) => {
            const data = JSON.parse(event.data);
            if (data.type === 'output') {
                term.write(data.data);
            }
        };

        ws.onclose = () => {
            term.write('\r\nConnection closed\r\n');
        };

        ws.onerror = () => {
            term.write('\r\nConnection error\r\n');
        };
    }

    // Initialize terminal when page loads
    document.addEventListener('DOMContentLoaded', () => {
        initTerminal();

        const connectButton = document.getElementById('connect-button');
        if (connectButton) {
            connectButton.addEventListener('click', connect);
        }
    });
</script>